name: Continuous Integration

on:
  push:
  pull_request:
    types: [ labeled ]
jobs:
  prepare:
    # only conintue if a push or PR labeled with 'run regression'
    if: github.event_name == 'push' || (github.event.action == 'labeled' && github.event.label.name == 'run regression')
    runs-on: ubuntu-latest
    outputs:
      uuid: ${{ steps.uuid.outputs.value }}
      pr_labels: ${{ steps.pr.outputs.labels }}
      # if we are triggered by a pull_request labeled event, there is no branch, so we fall back to checking the
      # label in the github.event. Also steps.run_regression.outputs.value will be "false" in this case which
      # being a string is actually considered true, so fromJSON is needed to turn `"false"` into `false`.
      # finally if we are on the 'master' branch then run the regression tests regardless of the PR label
      run_regression: ${{ fromJSON(steps.run_regression.outputs.value) || github.event.label.name == 'run regression' || github.ref_name == 'master' }}
    permissions:
      pull-requests: read
    steps:
      - uses: actions/checkout@v4
      - name: Get PR labels
        id: pr
        # the github.event.pull_request.labels is not available when a build
        # is triggered by a push. So we use the `gh` CLI to get info about the PR for the
        # current branch.
        # - If the branch doesn't have a PR yet, then the `gh pr view` command fails with
        # the message: no pull requests found for branch "pr-label-test"
        # - If the trigger is a labeled pull_request, a branch is not checked out, so the
        # `gh pr view` command can't find the PR. This case is handled in the job output
        # above.
        # - If the same branch is part of multiple PR, it isn't clear what will
        # happen, but that should be very unusual.
        run: echo "labels=$(gh pr view --json labels -q '.labels' || echo "[]")" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Print PR labels
        run: echo "PR labels ${{ steps.pr.outputs.labels }}"
      - name: Get run_regression
        id: run_regression
        run: echo "value=${{ contains(fromJSON(steps.pr.outputs.labels).*.name, 'run regression') }}" >> $GITHUB_OUTPUT
      - name: Generate unique ID ðŸ’Ž
        id: uuid
        # take the current commit + timestamp together
        # the typical value would be something like
        # "sha-5d3fe...35d3-time-1620841214"
        run: echo "value=sha-$GITHUB_SHA-time-$(date +"%s")" >> $GITHUB_OUTPUT
      - name: Print unique ID
        run: echo "generated id ${{ steps.uuid.outputs.value }}"
  build_test:
    # We need 'prepare' so this job will be skipped if the trigger is a PR labeled with some other label
    needs: ['prepare']
    name: Build and Run Jest Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Install Dependencies
        run: npm ci
      - name: Install CMS Dependencies
        working-directory: ./cms
        run: npm ci
      - name: Build
        run: npm run build
      - name: Run Tests
        run: npm run test:coverage -- --runInBand
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          flags: jest
          token: ${{ secrets.CODECOV_TOKEN }}
  cypress:
    needs: ['prepare']
    runs-on: ubuntu-latest
    container: cypress/browsers:node16.14.2-slim-chrome103-ff102
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run 1 copy of the current job in parallel
        # One thread is enoguh for now, since there is only one smoke test
        containers: [1]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install CMS Dependencies
        working-directory: ./cms
        run: npm ci
      - uses: cypress-io/github-action@v4
        with:
          start: npm start
          wait-on: 'http://localhost:8080'
          # wait 10 minutes to start the addition of the CMS required this increase
          wait-on-timeout: 600
          # only record the results to dashboard.cypress.io if CYPRESS_RECORD_KEY is set
          record: ${{ !!secrets.CYPRESS_RECORD_KEY }}
          # only do parallel if we have a record key
          parallel: ${{ !!secrets.CYPRESS_RECORD_KEY }}
          # upload videos for failing specs
          config: video=true,videoUploadOnPasses=false
          browser: chrome
          spec: cypress/e2e/clue/smoke/**
          group: 'Smoke tests'
          ci-build-id: '${{ needs.prepare.outputs.uuid }}-smoke'
        env:
          # pass the Dashboard record key as an environment variable
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # pass GitHub token to allow accurately detecting a build vs a re-run build
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # turn on code coverage when running npm start
          # so far we've been using a webpack coverage-istanbul-loader for this
          # but there has been work on using the code coverage support in the browser directly,
          # which should be much faster
          CODE_COVERAGE: true
          # Also turn on the code coverage tasks in cypress itself, these are disabled
          # by default.
          CYPRESS_coverage: true
          # Increase memory allocation
          NODE_OPTIONS: "--max_old_space_size=4096"
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          flags: cypress
          token: ${{ secrets.CODECOV_TOKEN }}
  s3-deploy:
    name: S3 Deploy
    needs:
      - build_test
      - cypress
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Install Dependencies
        run: npm ci
        env:
          # skip installing cypress since it isn't needed for just building
          # This decreases the deploy time quite a bit
          CYPRESS_INSTALL_BINARY: 0
      - name: Install CMS Dependencies
        working-directory: ./cms
        run: npm ci
        env:
          # skip installing cypress since it isn't needed for just building
          # This decreases the deploy time quite a bit
          CYPRESS_INSTALL_BINARY: 0
      - uses: concord-consortium/s3-deploy-action@v1
        with:
          bucket: models-resources
          prefix: collaborative-learning
          awsAccessKeyId: ${{ secrets.AWS_ACCESS_KEY_ID }}
          awsSecretAccessKey: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # Parameters to GHActions have to be strings, so a regular yaml array cannot
          # be used. Instead the `|` turns the following lines into a string
          topBranches: |
            ["master"]
  regression:
    needs: ['prepare']
    # only run the regression tests if the PR is labeled.
    if: fromJSON(needs.prepare.outputs.run_regression)
    runs-on: ubuntu-latest
    # temporarily expand the timeout to 4hrs until cypress cloud is available again
    # it was 1hr before.
    timeout-minutes: 240
    container: cypress/browsers:node16.14.2-slim-chrome103-ff102
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # temporarily use only 1 worker until cypress cloud is available again
        # it was:
        # container: [1, 2, 3, 4, 5]
        containers: [1]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Install CMS Dependencies
        working-directory: ./cms
        run: npm ci
      - uses: cypress-io/github-action@v4
        with:
          start: npm start
          wait-on: 'http://localhost:8080'
          # wait 10 minutes to start the addition of the CMS required this increase
          wait-on-timeout: 600
          # only record the results to dashboard.cypress.io if CYPRESS_RECORD_KEY is set
          record: ${{ !!secrets.CYPRESS_RECORD_KEY }}
          # only do parallel if we have a record key
          parallel: ${{ !!secrets.CYPRESS_RECORD_KEY }}
          # upload videos for failing specs
          config: video=true,videoUploadOnPasses=false
          browser: chrome
          group: 'Regression tests'
          ci-build-id: '${{ needs.prepare.outputs.uuid }}-regression'
        env:
          # pass the Dashboard record key as an environment variable
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # pass GitHub token to allow accurately detecting a build vs a re-run build
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # turn on code coverage when running npm start
          # so far we've been using a webpack coverage-istanbul-loader for this
          # but there has been work on using the code coverage support in the browser directly,
          # which should be much faster
          CODE_COVERAGE: true
          # Also turn on the code coverage tasks in cypress itself, these are disabled
          # by default.
          CYPRESS_coverage: true
          # Increase memory allocation
          NODE_OPTIONS: "--max_old_space_size=4096"
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          flags: cypress
          token: ${{ secrets.CODECOV_TOKEN }}
