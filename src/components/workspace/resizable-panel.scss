.resizable-panel {
  position: relative;
  // Split the remaining width in the flex container
  flex: 1;
  // Allow the width to be less than what is required by the content inside
  min-width: 0;
  // When the width is 0 hide any elements that didn't shrink down to 0
  overflow-x: clip;

  transition-duration: 0.5s;

  // A problem with animating using the flex-grow property is that it is not
  // linear. the percentage of the width is: leftFlexGrow / (leftFlexGrow + rightFlexGrow)
  // so for example when leftFlexGrow is at 0.5 the width is roughly 0.5 / (0.5 + 1) or 1/3 of
  // the total width
  //
  // In theory the following timing function should make the width change linearly with time,
  // but it didn't work well. It was created by using an evaluation engine to take the output
  // of the cubic-bezier and feed it in as x in y = x / (x + 1). The cubic-bezier params were
  // tweaked until the graph of y was pretty linear between 0 and 1.
  // transition-timing-function: cubic-bezier(0.5, 0.2, 0.7, 0.4)
  &.collapsed {
    flex: 0;
  }
}
