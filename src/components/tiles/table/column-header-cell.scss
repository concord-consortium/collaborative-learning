@import "../../vars";

.column-header-cell {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;

  .header-cell-container {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center ;

    &.show-expression {
      height: calc(var(--header-row-height) / 2);
    }

    .editable-header-cell {
      width: 100%;
      display: flex;
      align-items: center;
      justify-content: center;
      white-space: normal;
      word-break: break-word;
      text-align: center;
      line-height: 18px;

      .header-name {
        margin: 0 16px;
      }

      &.table-title-editing {
        padding: 0 !important;

        .rdg-text-editor:focus {
          border-color: $highlight-blue;
          outline: 0
        }

        input {
          text-align: center;
        }
      }
    }

    .column-button {
      position: absolute;
      width: 36px;
      height: 34px;
      justify-content: center;
      align-items: center;
    }

    .remove-column-button {
      left: -4px;
      display: none;  // overridden when tile is selected
      margin-right: 5px;
    }

    .sort-column-button {
      display: flex;
      right: -4px;
      margin-left: 5px;

      svg {
        .background {
          fill: var(--header-background-color);
        }
        .sort.circle {
          fill: var(--header-background-color);
        }

      }

      &.ascending {
        svg {
          .background {
            fill: var(--header-background-color);
          }
          .sort.circle {
            fill: var(--header-background-color);
          }
          .sort.arrow {
            fill: $workspace-teal-dark-1;
            opacity: 0;
          }
        }
      }
      &.descending {
        transform: rotate(180deg);
        svg {
          .background {
            fill: var(--header-background-color);
          }
          .sort.circle {
            fill: var(--header-background-color);
          }
          .sort.arrow {
            fill: $workspace-teal-dark-1;
            opacity: 0;
          }
        }
      }
      &:not(.selected-column) {
        display: none;
      }
      &:not(.selected-column):hover {
        display: flex;
        svg {
          .sort.arrow {
            opacity: 0.35;
          }
        }
      }
    }
  }

  &:not(.selected-column):hover {
    background-color: $highlight-blue-20;

    .column-button {
      display: flex !important;

      &.remove-column-button {
        display: flex !important;
        svg {
          .background {
            fill: var(--header-background-color);
            opacity: 0.35;
          }
          .foreground {
            stroke: $workspace-teal-dark-1;
            opacity: 0.35;
          }
        }
      }

      &.sort-column-button {
        svg {
          .background {
            fill: var(--header-background-color);
            opacity: 0.35;
          }
          .foreground {
            fill: $workspace-teal-dark-1;
            opacity: 0.35;
          }
        }
        &.ascending, &.descending {
          svg {
            .foreground.arrow {
              fill: $workspace-teal-dark-1;
            }
          }
        }
      }
    }
  }

  .expression-cell {
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-style: italic;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    line-height: 18px;
    &.has-expression {
      border-top: 1px solid white;
    }
  }
}

.selected-column {
  background-color: $highlight-blue-40;

  .column-header-cell {
    .column-button {
      display: flex !important;

      &.remove-column-button {
        svg {
          .background {
            fill: var(--header-background-color);
            opacity: 1;
          }
          .foreground {
            stroke: $workspace-teal-dark-1;
            opacity: 1;
          }
        }
        &:active {
          svg {
            .background {
              fill: $workspace-teal-dark-1;
            }
            .foreground {
              stroke: var(--header-background-color);
            }
          }
        }
      }
      &.sort-column-button {
        svg {
          .background {
            fill: var(--header-background-color);
            opacity: 1;
          }
          .foreground {
            fill: $workspace-teal-dark-1;
            opacity: 0.35;

            &.sort.circle {
              fill: $workspace-teal-dark-1;
              opacity: 1;
            }
            &.arrow {
              fill: $workspace-teal-dark-1;
              opacity: 1;
            }
          }
        }
        &:active {
          svg {
            .background {
              fill: $workspace-teal-dark-1;
            }
            .foreground {
              fill: var(--header-background-color);
              opacity: 1;
              &.sort {
                fill: var(--header-background-color);
                opacity: 1;
              }
            }
          }
          &.ascending {
            transform: rotate(180deg);
            svg {
              .foreground.arrow {
                fill: var(--header-background-color);
                opacity: 1;
              }
            }
          }
          &.descending {
            transform: rotate(0deg);
            svg {
              .foreground.arrow {
                fill: var(--header-background-color);
                opacity: 0.35;
              }
            }
          }
        }
      }
      &.ascending, .descending {
        svg {
          .foreground.arrow {
            fill: $workspace-teal-dark-1;
          }
        }
      }

      &:hover {
        svg {
          .background {
            fill: $workspace-teal-light-3;
            opacity: 1;
          }
        }
        &.ascending, .descending {
          svg {
            .foreground.arrow {
              fill: $workspace-teal-dark-1;
              opacity: 1;
            }
          }
        }
      }
    }
  }
}
