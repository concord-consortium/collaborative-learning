@import "../../../components/vars";
@import "../components/dataflow-vars";

$node-width: 176px;
$node-inner-width: 140px;
$std-height: 24px;
$top-space: 18px;

/* node layout for all nodes */
.node {
  display: flex;
  flex-direction: column;
  align-items: center;
  min-width: $node-width;
  width: $node-width;
  padding-bottom: $top-space;
  border-radius: 5px;
  box-sizing: border-box;
  border:3px solid;
  color: $gray-text;
  cursor: pointer;
  box-sizing: border-box;
  user-select: none;

  .top-bar {
    display: flex;
    width: $node-inner-width;
    height: $top-space;
    padding: 4px 0 2px 0;

    .close-node-button {
      position: absolute;
      right: 0px;
      top: 1px;
      width: $top-space;
      height: $top-space;
      svg {
        width: 8px;
        height: 8px;
        z-index: 1;
      }
    }
  }
  .node-type-letter {
    display: flex;
    align-items: center;
    justify-content: center;
    position: absolute;
    border:3px solid black;
    color:$gray-text;
    border-left-width: 0px;
    border-radius: 0 5px 5px 0;
    font-size: 14px;
    font-weight: bold;
    width: $std-height;
    height: $std-height;
    left: 0px;
    top: $top-space;
    color: $node-letter-text-color;
  }
  .node-name {
    display: flex;
    border-radius:3px;
    input {
      height: $std-height;
      background-color: white;
      border-radius:4px;
      transform: translateX(9px);
      width: 123px;
    }
  }
  .input {
    height: 2px;
    .input-socket {
      position: absolute;
      left: -20px;
    }
    .input-title {
      display: none;
    }
  }
  // this wraps the output socket
  .output {
    position: absolute;
    right: -21px;
    .output-title {
      display: none;
    }
  }
  .node-select-container {
    margin-top:4px;
    display: flex;
    height: $std-height;
    .node-select .item {
      height: $std-height;
      font-size: 13px;
    }
  }
  .node-graph-toggle-button {
    position: relative;
    width:$node-inner-width;
    .graph-button {
      height: 20px;
      width: 20px;
      position: absolute;
      left: 3px;
      top:-23px;
      display: flex;
      justify-content: center;
      align-items: center;
      flex-direction: row;
      padding: 3px;
      box-sizing: border-box;
      border-radius: 1px;
      border: 2px solid white;
      background-color: white;
      svg {
        width: 14px;
        height: 14px;
        z-index: 1;
      }
    }
  }
  .node-bottom-section {
    width: 100%;
    display: flex;

    .node-graph {
      margin-top:8px;
      padding: 5px 5px 0 0;
      width: $node-inner-width;
      border: 2px solid white;
      border-radius: 3px;
    }

    .node-bottom-buttons{
      display: flex;
      flex-direction: column;
      justify-content: center;
      width: 15px;

      .scale-buttons{
        width: 10px;
        background-color: white;
        height: 16px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 1px;
        margin-left: 1px;
        border:0px;

        &.plus {
          font-size: 14px;
          border-top-left-radius: 3px;
          margin-bottom: 3px;
          &:active {
            color: white;
          }
        }
        &.minus {
          border-top: 0px;
          font-size: 20px;
          padding-bottom: 3px;
          border-bottom-left-radius: 3px;
          &:active {
            color: white;
          }
        }
      }
    }
  }

  .output-socket div div,
  .input-socket div div {
    background: $socket-and-connection-gray;
    border:2px solid white;
  }

  /* these must be true for connections to line up */
  .output-socket,
  .input-socket {
    display: inline-block;
  }
}

/* node layout for input & operator families */
.node.input,
.node.sensor,
.node-number,
.node.generator,
.node.timer,
.node.math,
.node.logic,
.node.transform,
.node.control {
  .value-container {
    display: flex;
    align-items: center;
    justify-content: right;
    padding-right:8px;
    font-size: 12px;
    height: $std-height + 2;
    border-radius: 3px;
    width:$node-inner-width;
    margin-top:14px;
    border:2px solid white;
    border-radius: 3px 14px 14px 3px;
    position: relative;
    &::after {
      content: "";
      position: absolute;
      left: 10%;
      top: -10px;
      height: 2px;
      width: 80%;
    }
  }
  .units-container {
    width:25%;
    height: $std-height;
    width: 44px;
    border-radius: 0 13px 13px 0;
    border-left: 1px solid white;
  }
  .type-options, .type-options select {
    height: $std-height;
    width: 56px;
    border-radius: 0 13px 13px 0;
    background-color: white;
  }
  .number-container {
    margin-top: 6px;
    display: flex;
    box-sizing: border-box;
    align-items: center;
    width: $node-inner-width;
    flex-wrap: wrap;
    label {
      margin-right: 5px;
    }
    input {
      min-width: 0;
      flex:1;
      border-radius:3px;
      height: $std-height;
    }
  }
}

/* particular layout for sensor/input node */
.node.sensor {
  .value-with-units {
    display: flex;
    width: $node-inner-width;
    align-items: center;
    .value-container {
      padding-right: 40px;
      font-size: 14px;
    }
    .units-container {
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 14px;
      padding-right:4px;
      position: absolute;
      right:15.5px;
      top: 119.5px;
      background-color: $input-blue-lighter-1;
      height: $std-height -1;
      width: 36px;
      border:2px solid $input-blue-lighter-3;
    }
  }
}
/* particular layout for number node */
.node.number {
  .number-container {
    display: flex;
    align-items: center;
    margin-top:10px;
    width: $node-inner-width;
    height: $std-height;
    .number-label {
      display:none;
    }
    .number-input {
      height: $std-height + 3;
      width: $node-inner-width;
      text-align: right;
      font-size: 14px;
    }
    .single-unit {
      padding-left: 2px;
    }
  }
  .graph-button {
    height: 20px;
    width: 20px;
    position: absolute;
    top:-22px;
    svg {
      height: 14px;
      width: 14px;
    }
  }
}

/* particular layout for hold node */
.node.control {
  .number-container {
    .single-unit {
      padding-left: 3px;
    }
  }
}

/* particular layout for output nodes */
.node.demo-output,
.node.live-output {
  .node-name {
    margin-bottom: 1px;
  }
  .input {
    margin-top:10px;
    height: $std-height;
    &.nodevalue {
      position: relative;
      margin-top: 18px;
      &::after {
        content: "";
        position: absolute;
        left: 10%;
        top: -10px;
        height: 2px;
        width: 80%;
        background-color: $output-yellow-element;
        z-index: -1;
      }
      .input-socket {
        left: -34px;
        top:-3px;
      }
    }
  }
  .demo-output-value-container {
    border:2px solid white;
    position: relative;
    height: $std-height + 2;
    width: $node-inner-width;
    .left-content {
      width: 30%;
      .graph-button {
        position: absolute;
        top: -10px;
        left:-1px;
      }
    }
  }
}

/* node colors for input family */
.node.sensor,
.node.number,
.node.generator,
.node.timer {
  background-color: $input-blue;
  border-color: $input-blue-outline;
  .close-node-button svg {
    fill: lighten($input-blue-outline, 10%);
  }
  .node-type-letter {
    border-color: $input-blue-outline;
  }
  .node-name input {
    background-color: $input-blue-lighter-1;
    border: 2px solid $input-blue-lighter-2;
  }
  .node-select-container .icon svg {
    fill: $input-blue-outline;
  }
  .value-container {
    background-color: $input-blue-lighter-3;
    border: 2px solid white;
    &::after {
      background-color: lighten($input-blue-outline, 10%);
    }
  }
  .number-container {
    input {
      border:2px solid $input-blue-lighter-2;
    }
    .type-options select {
      background-color: $input-blue-lighter-2;
      border: 2px solid $input-blue-lighter-2;
    }
  }
  .graph-button {
    border: 2px solid lighten($input-blue-outline, 10%);
    &.active {
      background-color: $input-blue-lighter-2;
    }
    svg {
      fill: lighten($input-blue-outline, 10%);
    }
  }
  .node-graph {
    background-color: $input-blue-lighter-3;
  }
  .scale-buttons {
    color: $input-blue-outline;
  }
}

/* node colors for operator family */
.node.math,
.node.logic,
.node.transform,
.node.control {
  background-color: $operator-green;
  border-color: $operator-green-outline;
  .close-node-button svg {
    fill: lighten($operator-green-outline, 10%);
  }
  .node-type-letter {
    border-color: $operator-green-outline;
  }
  .node-name input {
    background-color: $operator-green-lighter-1;
    border: 2px solid $operator-green-lighter-2;
  }
  .node-select-container .icon svg {
    fill: $operator-green-outline;
  }
  .value-container {
    background-color: $operator-green-lighter-3;
    border: 2px solid white;
    &::after {
      background-color: lighten($operator-green-outline, 10%);
    }
  }
  .number-container {
    input {
      border:2px solid $operator-green-lighter-2;
    }
    .type-options select {
      background-color: $operator-green-lighter-2;
      border: 2px solid $operator-green-lighter-2;
    }
  }
  .graph-button {
    border: 2px solid lighten($operator-green-outline, 10%);
    &.active {
      background-color: $operator-green-lighter-2;
    }
    svg {
      fill: lighten($operator-green-outline, 10%);
    }
  }
  .node-graph {
    background-color: $operator-green-lighter-3;
  }
  .scale-buttons {
    color: $operator-green-outline;
  }
}

/* node colors for output family */
.node.demo-output,
.node.live-output {
  background-color: $output-yellow;
  border-color: $output-yellow-outline;
  .close-node-button svg {
    fill: $output-yellow-element;
  }
  .node-type-letter {
    border-color: $output-yellow-outline;
  }
  .node-name input {
    background-color: $output-yellow-lighter-1;
    border: 2px solid $output-yellow-lighter-2;
  }
  .node-select-container .icon svg {
    fill: $output-yellow-outline;
  }
  .demo-output-value-container {
    background-color: $output-yellow-lighter-3;
  }
  .graph-button {
    &.active {
      background-color: $output-yellow-lighter-2;
    }
    border: 2px solid lighten($output-yellow-outline, 10%);
    svg {
      fill: lighten($output-yellow-outline, 10%);
    }
  }
  .node-graph {
    background-color: $output-yellow-lighter-3;
  }
  .scale-buttons {
    color: $output-yellow-outline;
  }
}

/* node socket positions by node type
   sockets are positioned based on top so that
   we can expand plot without moving sockets
*/
.node.number {
  .output {
    top: 45px;
  }
}
.node.generator {
  .output {
    top: 141px;
  }
}
.node.timer .output {
  top: 113px;
}
.node.sensor .output {
  top: 112px;
}
.node.math {
  .output {
    top: 82px;
  }
  .input.number1 .input-socket {
    top: 70px;
  }
  .input.number2 .input-socket {
    top: 96px;
  }
}
.node.logic {
  .output {
    top: 82px;
  }
  .input.number1 .input-socket {
    top: 70px;
  }
  .input.number2 .input-socket {
    top: 96px;
  }
}
.node.transform {
  .output {
    top: 82px;
  }
  .input.number1 .input-socket {
    top: 80px;
  }
}
.node.control {
  .output {
    top: 112px;
  }
  .input.number2 .input-socket {
    top: 98px;
  }
  .input.binary .input-socket {
    top: 125px;
  }
}

